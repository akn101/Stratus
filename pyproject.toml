[tool.poetry]
name = "stratus-erp"
version = "0.1.0"
description = "ERP-style integration service for data warehouse and future workflow automation"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
requests = "^2.31.0"
psycopg2-binary = "^2.9.7"
sqlalchemy = "^2.0.20"
pydantic = "^2.4.2"
apscheduler = "^3.10.4"
tenacity = "^8.2.3"
python-dotenv = "^1.0.0"
alembic = "^1.12.0"
PyYAML = "^6.0.1"
prometheus-client = "^0.19.0"
structlog = "^23.2.0"
fastapi = { version = "^0.104.1", optional = true }
uvicorn = { version = "^0.24.0", optional = true }

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.2"
black = "^23.7.0"
flake8 = "^6.0.0"
mypy = "^1.5.1"
ruff = "^0.1.5"
pre-commit = "^3.5.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
types-pyyaml = "^6.0.12.20250822"
types-requests = "^2.32.4.20250809"

[tool.poetry.extras]
web = ["fastapi", "uvicorn"]

[tool.ruff]
target-version = "py311"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "B904", # Allow raising exceptions without from e
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B018"]

[tool.black]
target-version = ['py311']
include = '\.pyi?$'
line-length = 100

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
strict_optional = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=src --cov-report=term-missing --cov-report=xml"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
